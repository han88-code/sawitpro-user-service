# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /register:
    post:
      summary: This is endpoint for register new user.
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequestBody"
      responses:
        '200':
          description: Successful registeration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterSuccessResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /login:
    post:
      summary: This is endpoint for login user.
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequestBody"
      responses:
        '200':
          description: Successful login
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/LoginSuccessResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /profile:
    get:
      summary: This is endpoint for get user profile.
      operationId: profile
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful get user profile
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileSuccessResponse"
        '403':
          description: Forbidden Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /profile-update:
    post:
      summary: This is endpoint for update user profile.
      operationId: profileupdate
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileUpdateRequestBody"
      responses:
        '200':
          description: Successful update profile
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileSuccessResponse"
        '403':
          description: Forbidden Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Conflict Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    RegisterRequestBody:
      type: object
      required:
        - fullname
        - phonenumber
        - password
      properties:
        fullname:
          type: string
          minLength: 3
          maxLength: 60
        phonenumber:
          type: string
          minLength: 10
          maxLength: 13
        password:
          type: string
          minLength: 6
          maxLength: 64
    RegisterSuccessResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    LoginRequestBody:
      type: object
      required:
        - phonenumber
        - password
      properties:
        phonenumber:
          type: string
        password:
          type: string
    LoginSuccessResponse:
      type: object
      required:
        - id
        - token
      properties:
        id:
          type: integer
        token:
          type: string
    ProfileSuccessResponse:
      type: object
      required:
        - fullname
        - phonenumber
      properties:
        fullname:
          type: string
        phonenumber:
          type: string
    ProfileUpdateRequestBody:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        fullname:
          type: string
        phonenumber:
          type: string

